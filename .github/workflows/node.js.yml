# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
   push:
      branches: ["main"]
   pull_request:
      branches: ["main"]

jobs:
   build-frontend:
      runs-on: ubuntu-latest
      strategy:
         matrix:
            node-version: [18.x, 20.x, 22.x]
            # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

      steps:
             - uses: actions/checkout@v4
             - name: Use Node.js ${{ matrix.node-version }}
               uses: actions/setup-node@v4
               with:
                 node-version: ${{ matrix.node-version }}
                 cache: "pnpm"
                 cache-dependency-path: frontend/pnpm-lock.yaml
             - name: Install pnpm
               run: npm i -g pnpm
             - name: Install dependencies
               run: pnpm ci
               working-directory: frontend
             - name: Build
               run: pnpm run build --if-present
               working-directory: frontend
             - name: Lint
               run: pnpm lint
               working-directory: frontend
   build-backend:
      runs-on: ubuntu-latest
      strategy:
         matrix:
            node-version: [18.x, 20.x, 22.x]
            # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

      steps:
         - uses: actions/checkout@v4
         - name: Use Node.js ${{ matrix.node-version }}
           uses: actions/setup-node@v4
           with:
              node-version: ${{ matrix.node-version }}
              cache: "npm"
              cache-dependency-path: frontend/pnpm-lock.yaml
         - run: cd backend
         - run: npm i -g pnpm
         - run: pnpm ci
         - run: pnpm run build --if-present
         - run: pnpm eslint .
